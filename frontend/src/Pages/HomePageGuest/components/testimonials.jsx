import { Avatar } from "./ui/avatar";
import { Card, CardContent } from "./ui/card";
import useMasonry from "./useMasonry";
import { useState } from "react";
import { Star, BookHeart, BicepsFlexed, Crown } from "lucide-react";


import TestimonialImg01 from "./images/testimonial-01.jpg";
import TestimonialImg02 from "./images/testimonial-02.jpg";
import TestimonialImg03 from "./images/testimonial-03.jpg";
import TestimonialImg04 from "./images/testimonial-04.jpg";
import TestimonialImg05 from "./images/testimonial-05.jpg";
import TestimonialImg06 from "./images/testimonial-06.jpg";
import TestimonialImg07 from "./images/testimonial-07.jpg";
import TestimonialImg08 from "./images/testimonial-08.jpg";
import TestimonialImg09 from "./images/testimonial-09.jpg";
import Deer from "./images/deer.png";
// import ClientImg02 from "./images/client-logo-02.svg";
// import ClientImg03 from "./images/client-logo-03.svg";
// import ClientImg04 from "./images/client-logo-04.svg";
// import ClientImg05 from "./images/client-logo-05.svg";
// import ClientImg06 from "./images/client-logo-06.svg";
// import ClientImg07 from "./images/client-logo-07.svg";
// import ClientImg08 from "./images/client-logo-08.svg";
// import ClientImg09 from "./images/client-logo-09.svg";

const testimonials = [
  {
    img: TestimonialImg01,
    clientImg: Deer,
    name: "MaKayla P.",
    company: "Disney",
    content:
      "As a content creator, I was always on the lookout for a tool that could help me keep up with the demand. The AI-driven content tool has been a game-changer. It generates high-quality content in a fraction of the time it used to take me.",
    categories: [1, 3, 5],
  },
  {
    img: TestimonialImg02,
    clientImg: Deer,
    name: "Andrew K.",
    company: "Samsung",
    content:
      "I've tried several content generation tools, but this AI-driven tool is by far the best. It understands my brand's voice and consistently produces content that resonates with my audience!",
    categories: [1, 2, 4],
  },
  {
    img: TestimonialImg03,
    clientImg: Deer,
    name: "Lucy D.",
    company: "Rio",
    content:
      "Content creation used to be a bottleneck in our workflow, but not anymore. This AI tool is intuitive and produces top-notch content every time. It's like having an extra team member who never sleeps! Definitely recommend.",
    categories: [1, 2, 5],
  },
  {
    img: TestimonialImg04,
    clientImg: Deer,
    name: "Pavel M.",
    company: "Canon",
    content:
      "The quality of the content generated by this AI tool is outstanding. It has taken our content marketing to new heights, allowing us to publish more frequently without compromising on quality. Highly recommended for anyone.",
    categories: [1, 4],
  },
  {
    img: TestimonialImg05,
    clientImg: Deer,
    name: "Miriam E.",
    company: "Cadbury",
    content:
      "The AI-driven content tool has been a lifesaver for my marketing agency. We can now produce high-quality content for multiple clients quickly and efficiently. It's an invaluable asset to our team.",
    categories: [1, 3, 5],
  },
  {
    img: TestimonialImg06,
    clientImg: Deer,
    name: "Eloise V.",
    company: "Maffell",
    content:
      "I'm amazed at how well this AI-driven content tool performs. It's incredibly versatile and can generate content for blogs, social media, and even product descriptions effortlessly. It's fantastic!",
    categories: [1, 3],
  },
  {
    img: TestimonialImg07,
    clientImg: Deer,
    name: "Pierre-Gilles L.",
    company: "Binance",
    content:
      "I was blown away by how easy it was to create my content using this tool! Within a few hours, I had a professional-looking platform up and running, and my client could not believe it.",
    categories: [1, 2, 5],
  },
  {
    img: TestimonialImg08,
    clientImg: Deer,
    name: "Danielle K.",
    company: "Forbes Inc.",
    content:
      "I've never been a fan of complicated website AI tools, which is why Open PRO is perfect for me. Its minimalist design and simple functionality make staying organized feel like second nature.",
    categories: [1, 4],
  },
  {
    img: TestimonialImg09,
    clientImg: Deer,
    name: "Mary P.",
    company: "Ray Ban",
    content:
      "I've never been one for coding, so finding an AI tool that doesn't require any technical skills was a dream come true. This tool exceeded my expectations, and I'm proud to show off my new stuff to friends.",
    categories: [1, 2],
  },
];
export default function Testimonials() {
  const masonryContainer = useMasonry();
  const [category, setCategory] = useState(1);

 

  return (
    <div className="mx-auto max-w-6xl px-4 sm:px-6">
      <div className="border-t py-12 [border-image:linear-gradient(to_right,transparent,theme(colors.slate.400/.25),transparent)1] md:py-20">
        {/* Section header */}
        <div className="mx-auto max-w-3xl pb-12 text-center">
          <h2 className="animate-[gradient_6s_linear_infinite] bg-gradient-to-r from-[#01324c] via-[#01324c] to-[#01324c] bg-[length:200%_auto] bg-clip-text pb-4 font-nacelle text-3xl font-semibold text-transparent md:text-4xl flex items-center justify-center space-x-4">
            <span>_______</span>
            <Star className="text-[#01324c]" width={24} height={24} />
            <span>_______</span>
          </h2>
          <p className="mt-4 text-lg text-transparent bg-gradient-to-r from-[#4f7489] to-[#037bba] bg-clip-text">
            You won't regret joining the cariGo world , just ask our team.
          </p>
        </div>

        <div>
          {/* Buttons */}
          <div className="flex justify-center pb-12 max-md:hidden md:pb-16">
            <div className="relative inline-flex flex-wrap justify-center rounded-[1.25rem] bg-[#01324c] p-1">
              {/* Button #1 */}
              <button
                className={`flex h-8 flex-1 items-center gap-2.5 whitespace-nowrap rounded-full px-3 text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring focus-visible:ring-indigo-200 ${
                  category === 1
                    ? "relative bg-gradient-to-b from-[#01324c] via-[#037bba] to-[#01324c] before:pointer-events-none before:absolute before:inset-0 before:rounded-[inherit] before:border before:border-transparent before:[background:linear-gradient(to_bottom,theme(colors.indigo.500/0),theme(colors.indigo.500/.5))_border-box] before:[mask-composite:exclude_!important] before:[mask:linear-gradient(white_0_0)_padding-box,_linear-gradient(white_0_0)] text-white"
                    : "opacity-65 transition-opacity hover:opacity-90 text-gray-300"
                }`}
                aria-pressed={category === 1}
                onClick={() => setCategory(1)}
              >
                <svg
                  className={`fill-current ${
                    category === 1 ? "text-[#f7c59f]" : "text-gray-600"
                  }`}
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height={16}
                >
                  <path d="M.062 10.003a1 1 0 0 1 1.947.455c-.019.08.01.152.078.19l5.83 3.333c.052.03.115.03.168 0l5.83-3.333a.163.163 0 0 0 .078-.188 1 1 0 0 1 1.947-.459 2.161 2.161 0 0 1-1.032 2.384l-5.83 3.331a2.168 2.168 0 0 1-2.154 0l-5.83-3.331a2.162 2.162 0 0 1-1.032-2.382Zm7.854-7.981-5.83 3.332a.17.17 0 0 0 0 .295l5.828 3.33c.054.031.118.031.17.002l5.83-3.333a.17.17 0 0 0 0-.294L8.085 2.023a.172.172 0 0 0-.17-.001ZM9.076.285l5.83 3.332c1.458.833 1.458 2.935 0 3.768l-5.83 3.333c-.667.38-1.485.38-2.153-.001l-5.83-3.332c-1.457-.833-1.457-2.935 0-3.767L6.925.285a2.173 2.173 0 0 1 2.15 0Z" />
                </svg>
                <span>View All</span>
              </button>
              {/* Button #2 */}
              <button
                className={`flex h-8 flex-1 items-center gap-2.5 whitespace-nowrap rounded-full px-3 text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring focus-visible:ring-indigo-200 ${
                  category === 2
                    ? "relative bg-gradient-to-b from-[#01324c] via-[#037bba] to-[#01324c] before:pointer-events-none before:absolute before:inset-0 before:rounded-[inherit] before:border before:border-transparent before:[background:linear-gradient(to_bottom,theme(colors.indigo.500/0),theme(colors.indigo.500/.5))_border-box] before:[mask-composite:exclude_!important] before:[mask:linear-gradient(white_0_0)_padding-box,_linear-gradient(white_0_0)] text-white"
                    : "opacity-65 transition-opacity hover:opacity-90 text-gray-300"
                }`}
                aria-pressed={category === 2}
                onClick={() => setCategory(2)}
              >
                <Crown
                  className={`${
                    category === 2 ? "text-[#f7c59f]" : "text-gray-600"
                  }`}
                  width={16}
                  height={16}
                />
                <span>Team Lead</span>
              </button>
              {/* Button #3 */}
              <button
                className={`flex h-8 flex-1 items-center gap-2.5 whitespace-nowrap rounded-full px-3 text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring focus-visible:ring-indigo-200 ${
                  category === 3
                    ? "relative bg-gradient-to-b from-[#01324c] via-[#037bba] to-[#01324c] before:pointer-events-none before:absolute before:inset-0 before:rounded-[inherit] before:border before:border-transparent before:[background:linear-gradient(to_bottom,theme(colors.indigo.500/0),theme(colors.indigo.500/.5))_border-box] before:[mask-composite:exclude_!important] before:[mask:linear-gradient(white_0_0)_padding-box,_linear-gradient(white_0_0)] text-white"
                    : "opacity-65 transition-opacity hover:opacity-90 text-gray-300"
                }`}
                aria-pressed={category === 3}
                onClick={() => setCategory(3)}
              >
                <BookHeart
                  className={`${
                    category === 3 ? "text-[#f7c59f]" : "text-gray-600"
                  }`}
                  width={16}
                  height={16}
                />
                <span>Girl Power</span>
              </button>
              {/* Button #4 */}
              <button
                className={`flex h-8 flex-1 items-center gap-2.5 whitespace-nowrap rounded-full px-3 text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring focus-visible:ring-indigo-200 ${
                  category === 4
                    ? "relative bg-gradient-to-b from-[#01324c] via-[#037bba] to-[#01324c] before:pointer-events-none before:absolute before:inset-0 before:rounded-[inherit] before:border before:border-transparent before:[background:linear-gradient(to_bottom,theme(colors.indigo.500/0),theme(colors.indigo.500/.5))_border-box] before:[mask-composite:exclude_!important] before:[mask:linear-gradient(white_0_0)_padding-box,_linear-gradient(white_0_0)] text-white"
                    : "opacity-65 transition-opacity hover:opacity-90 text-gray-300"
                }`}
                aria-pressed={category === 4}
                onClick={() => setCategory(4)}
              >
                <BicepsFlexed
                  className={`${
                    category === 4 ? "text-[#f7c59f]" : "text-gray-600"
                  }`}
                  width={16}
                  height={16}
                />
                <span>Men Power</span>
              </button>
            </div>
          </div>

          {/* Cards */}
          <div
            className="mx-auto grid max-w-sm items-start gap-6 sm:max-w-none sm:grid-cols-2 lg:grid-cols-3"
            ref={masonryContainer}
          >
            {testimonials.map((testimonial, index) => (
              <div key={index} className="group">
                <Testimonial testimonial={testimonial} category={category}>
                  {testimonial.content}
                </Testimonial>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

export function Testimonial({ testimonial, category, children }) {
  const isVisible = testimonial.categories.includes(category);

  return (
    <article
      className={`relative rounded-2xl p-5 backdrop-blur-sm transition-opacity ${
        isVisible
          ? "bg-gradient-to-br from-[#01324c] via-[#004e89] to-[#01324c] text-[#f7e1c6]"
          : "bg-[#093249] text-gray-500 opacity-30"
      }`}
    >
      <div className="flex flex-col gap-4">
        <div>
          <img
            src={testimonial.clientImg}
            width={40}
            height={40}
            alt="Client logo"
            className={isVisible ? "opacity-100" : "opacity-50"}
          />
        </div>
        <p
          className={`before:content-['“'] after:content-['”'] ${
            isVisible ? "text-[#f7e1c6]" : "text-gray-500"
          }`}
        >
          {children}
        </p>
        <div className="flex items-center gap-3">
          <img
            className={`inline-flex shrink-0 rounded-full ${
              isVisible ? "opacity-100" : "opacity-50"
            }`}
            src={testimonial.img}
            width={36}
            height={36}
            alt={testimonial.name}
          />
          <div
            className={`text-sm font-medium ${
              isVisible ? "text-[#f7e1c6]" : "text-gray-500"
            }`}
          >
            <span>{testimonial.name}</span>
            <span className="text-gray-700"> - </span>
            <a
              className={`transition-colors ${
                isVisible
                  ? "text-[#f7e1c6] hover:text-white"
                  : "text-gray-500 hover:text-gray-400"
              }`}
              href="#0"
            >
              {testimonial.company}
            </a>
          </div>
        </div>
      </div>
    </article>
  );
}

